{
  "name": "blocktremp-backend-monorepo",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build admin && nest build main && nest build vas",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start": "nest start",
    "start:admin": "yarn start admin",
    "start:main": "yarn start main",
    "start:vas": "yarn start vas",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "npm run typeorm:run-migrations && node dist/apps/main/main",
    "start:prod:admin": "npm run typeorm:run-migrations && node dist/apps/admin/main",
    "start:prod:vas": "npm run typeorm:run-migrations && node dist/apps/vas/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./apps/blocktremp-backend-monorepo/test/jest-e2e.json",
    "typeorm": "ts-node ./node_modules/typeorm/cli",
    "typeorm:run-migrations": "npm run typeorm migration:run -- -d ./typeOrm.config.ts",
    "typeorm:generate-migration": "npm run typeorm -- -d ./typeOrm.config.ts migration:generate ./migrations/$npm_config_name",
    "typeorm:create-migration": "npm run typeorm -- migration:create ./migrations/$npm_config_name",
    "typeorm:revert-migration": "npm run typeorm -- -d ./typeOrm.config.ts migration:revert"
  },
  "dependencies": {
    "@angular-devkit/core": "^17.0.10",
    "@aws-sdk/client-s3": "^3.282.0",
    "@nestjs/axios": "^3.0.1",
    "@nestjs/common": "^8.0.0",
    "@nestjs/config": "^3.1.1",
    "@nestjs/core": "^8.0.0",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^8.0.0",
    "@nestjs/platform-socket.io": "9.1.6",
    "@nestjs/schedule": "^4.0.0",
    "@nestjs/swagger": "^7.1.17",
    "@nestjs/typeorm": "^10.0.1",
    "@nestjs/websockets": "9.1.6",
    "@sendgrid/mail": "^8.1.0",
    "@slack/web-api": "^7.8.0",
    "@types/bcrypt": "^5.0.0",
    "@types/date-fns": "^2.6.0",
    "algosdk": "^2.7.0",
    "axios": "^1.6.7",
    "bcryptjs": "^3.0.2",
    "cache-manager": "^4.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "cloudinary": "^1.41.1",
    "cron": "^3.1.6",
    "csv-writer": "^1.6.0",
    "express": "^4.18.2",
    "file-type": "^16.0.0",
    "ical-generator": "^4.0.0",
    "luxon": "^3.1.1",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.12.0",
    "pinata-web3": "^0.5.4",
    "puppeteer": "^22.13.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "socket.io": "^4.6.0",
    "typeorm": "^0.3.19"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/cache-manager": "^4.0.2",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/luxon": "^3.3.0",
    "@types/node": "^20.3.1",
    "@types/passport-jwt": "^3.0.7",
    "@types/passport-local": "^1.0.34",
    "@types/pdfkit": "^0.13.4",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^5.59.11",
    "@typescript-eslint/parser": "^5.59.11",
    "dayjs": "^1.11.7",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-prettier": "^4.2.1",
    "jest": "^29.5.0",
    "moment": "^2.29.4",
    "moment-timezone": "^0.5.43",
    "prettier": "^2.8.8",
    "rrule": "^2.7.2",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/"
    ]
  }
}
